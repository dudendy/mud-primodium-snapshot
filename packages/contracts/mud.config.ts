import { mudConfig } from "@latticexyz/world/register";

export default mudConfig({
  tables: {
    Counter: { keySchema: {}, valueSchema: "uint256" },
    P_GameConfig: {
      keySchema: {},
      valueSchema: {
        admin: "address",
        unitProductionRate: "uint256",
        maxMotherlodesPerAsteroid: "uint256",
        motherlodeChanceInv: "uint256",
        motherlodeDistance: "uint256",
        travelTime: "uint256",
        worldSpeed: "uint256",
        tax: "uint256",
      },
    },
    P_GameConfig2: { keySchema: {}, valueSchema: { wETHAddress: "address" } },
    Position: { keySchema: { entity: "bytes32" }, valueSchema: { x: "int32", y: "int32", parent: "bytes32" } },
    ReversePosition: { keySchema: { x: "int32", y: "int32" }, valueSchema: { entity: "bytes32" } },
    OwnedBy: { keySchema: { entity: "bytes32" }, valueSchema: { value: "bytes32" } },
    Level: { keySchema: { entity: "bytes32" }, valueSchema: "uint256" },
    Spawned: { keySchema: { entity: "bytes32" }, valueSchema: "bool" },
    P_EnumToPrototype: { keySchema: { key: "bytes32", id: "uint8" }, valueSchema: "bytes32" },
    Home: { keySchema: { entity: "bytes32" }, valueSchema: { asteroid: "bytes32", mainBase: "bytes32" } },
    P_Asteroid: { keySchema: {}, valueSchema: { xBounds: "int32", yBounds: "int32" } },
    AsteroidCount: { keySchema: {}, valueSchema: "uint256" },
    RockType: { keySchema: { entity: "bytes32" }, valueSchema: "uint8" },
    Dimensions: { keySchema: { key: "bytes32", level: "uint256" }, valueSchema: { width: "int32", height: "int32" } },
    P_Terrain: { keySchema: { x: "int32", y: "int32" }, valueSchema: "uint8" },
    P_IsAdvancedResource: { keySchema: { id: "uint8" }, valueSchema: "bool" },
    P_IsUtility: { keySchema: { id: "uint8" }, valueSchema: "bool" },
    MaxResourceCount: { keySchema: { entity: "bytes32", resource: "uint8" }, valueSchema: "uint256" },
    LastClaimedAt: { keySchema: { entity: "bytes32" }, valueSchema: "uint256" },
    ResourceCount: { keySchema: { entity: "bytes32", resource: "uint8" }, valueSchema: "uint256" },
    MapItemUtilities: { keySchema: { entity: "bytes32", utility: "uint8" }, valueSchema: "uint256" },
    MapItemStoredUtilities: {
      keySchema: { entity: "bytes32", utility: "uint8" },
      valueSchema: { stored: "bool", index: "uint256" },
    },
    MapUtilities: { keySchema: { entity: "bytes32" }, valueSchema: "uint8[]" },
    P_RequiredTile: { keySchema: { prototype: "bytes32" }, valueSchema: "uint8" },
    P_RequiredBaseLevel: { keySchema: { prototype: "bytes32", level: "uint256" }, valueSchema: "uint256" },
    P_RequiredResources: {
      keySchema: { prototype: "bytes32", level: "uint256" },
      valueSchema: { resources: "uint8[]", amounts: "uint256[]" },
    },
    P_RequiredDependency: {
      keySchema: { prototype: "bytes32", level: "uint256" },
      valueSchema: { resource: "uint8", amount: "uint256" },
    },
    P_RequiredUpgradeResources: {
      keySchema: { prototype: "bytes32", level: "uint256" },
      valueSchema: { resources: "uint8[]", amounts: "uint256[]" },
    },
    P_Blueprint: { keySchema: { prototype: "bytes32" }, valueSchema: "int32[]" },
    P_MaxLevel: { keySchema: { prototype: "bytes32" }, valueSchema: "uint256" },
    P_Production: {
      keySchema: { prototype: "bytes32", level: "uint256" },
      valueSchema: { resources: "uint8[]", amounts: "uint256[]" },
    },
    P_UnitProdTypes: { keySchema: { prototype: "bytes32", level: "uint256" }, valueSchema: "bytes32[]" },
    P_UnitProdMultiplier: { keySchema: { prototype: "bytes32", level: "uint256" }, valueSchema: "uint256" },
    SetItemUnitFactories: {
      keySchema: { entity: "bytes32", building: "bytes32" },
      valueSchema: { stored: "bool", index: "uint256" },
    },
    SetUnitFactories: { keySchema: { entity: "bytes32" }, valueSchema: "bytes32[]" },
    P_ByLevelMaxResourceUpgrades: {
      keySchema: { prototype: "bytes32", resource: "uint8", level: "uint256" },
      valueSchema: "uint256",
    },
    P_ListMaxResourceUpgrades: { keySchema: { prototype: "bytes32", level: "uint256" }, valueSchema: "uint8[]" },
    P_ConsumesResource: { keySchema: { resource: "uint8" }, valueSchema: "uint8" },
    BuildingType: { keySchema: { entity: "bytes32" }, valueSchema: "bytes32" },
    Children: { keySchema: { entity: "bytes32" }, valueSchema: "bytes32[]" },
    ProductionRate: { keySchema: { entity: "bytes32", resource: "uint8" }, valueSchema: "uint256" },
    ConsumptionRate: { keySchema: { entity: "bytes32", resource: "uint8" }, valueSchema: "uint256" },
    IsActive: { keySchema: { entity: "bytes32" }, valueSchema: "bool" },
    Motherlode: { keySchema: { entity: "bytes32" }, valueSchema: { size: "uint8", motherlodeType: "uint8" } },
    SetItemMotherlodes: {
      keySchema: { motherlode: "bytes32", item: "bytes32" },
      valueSchema: { stored: "bool", index: "uint256" },
    },
    SetMotherlodes: { keySchema: { entity: "bytes32" }, valueSchema: "bytes32[]" },
    P_SizeToAmount: { keySchema: { size: "uint8" }, valueSchema: "uint256" },
    OwnedMotherlodes: { keySchema: { entity: "bytes32" }, valueSchema: "bytes32[]" },
    P_RawResource: { keySchema: { resource: "uint8" }, valueSchema: "uint8" },
    P_UnitPrototypes: { keySchema: {}, valueSchema: "bytes32[]" },
    P_Unit: {
      keySchema: { entity: "bytes32", level: "uint256" },
      valueSchema: {
        attack: "uint256",
        defense: "uint256",
        speed: "uint256",
        cargo: "uint256",
        trainingTime: "uint256",
      },
    },
    P_MiningRate: { keySchema: { entity: "bytes32", level: "uint256" }, valueSchema: "uint256" },
    QueueUnits: {
      keySchema: { entity: "bytes32" },
      valueSchema: { front: "uint256", back: "uint256", queue: "bytes32[]" },
    },
    QueueItemUnits: {
      keySchema: { entity: "bytes32", index: "uint256" },
      valueSchema: { unitId: "bytes32", quantity: "uint256" },
    },
    UnitLevel: { keySchema: { entity: "bytes32", unit: "bytes32" }, valueSchema: "uint256" },
    UnitCount: { keySchema: { player: "bytes32", rock: "bytes32", unit: "bytes32" }, valueSchema: "uint256" },
    ClaimOffset: { keySchema: { entity: "bytes32" }, valueSchema: "uint256" },
    ArrivalCount: { keySchema: { entity: "bytes32" }, valueSchema: "uint256" },
    MapArrivals: { keySchema: { entity: "bytes32", asteroid: "bytes32" }, valueSchema: { itemKeys: "bytes32[]" } },
    MapItemStoredArrivals: {
      keySchema: { entity: "bytes32", asteroid: "bytes32", key: "bytes32" },
      valueSchema: { stored: "bool", index: "uint256" },
    },
    MapItemArrivals: { keySchema: { entity: "bytes32", asteroid: "bytes32", key: "bytes32" }, valueSchema: "bytes" },
    BattleResult: {
      keySchema: { entity: "bytes32" },
      valueSchema: {
        attacker: "bytes32",
        defender: "bytes32",
        winner: "bytes32",
        rock: "bytes32",
        totalCargo: "uint256",
        timestamp: "uint256",
        attackerStartingUnits: "uint256[]",
        defenderStartingUnits: "uint256[]",
        attackerUnitsLeft: "uint256[]",
        defenderUnitsLeft: "uint256[]",
      },
      offchainOnly: !0,
    },
    RaidResult: {
      keySchema: { entity: "bytes32" },
      valueSchema: { defenderValuesBeforeRaid: "uint256[]", raidedAmount: "uint256[]" },
      offchainOnly: !0,
    },
    P_ScoreMultiplier: { keySchema: { entity: "uint8" }, valueSchema: "uint256" },
    Score: { keySchema: { entity: "bytes32" }, valueSchema: "uint256" },
    HookedValue: { keySchema: { entity: "bytes32" }, valueSchema: "uint256" },
    OnHookChangedValue: { keySchema: { entity: "bytes32" }, valueSchema: "uint256" },
    P_SpawnPirateAsteroid: {
      keySchema: { prototype: "bytes32" },
      valueSchema: {
        x: "int32",
        y: "int32",
        resources: "uint8[]",
        resourceAmounts: "uint256[]",
        units: "bytes32[]",
        unitAmounts: "uint256[]",
      },
    },
    PirateAsteroid: {
      keySchema: { entity: "bytes32" },
      valueSchema: { playerEntity: "bytes32", prototype: "bytes32" },
    },
    P_RequiredObjectives: { keySchema: { prototype: "bytes32" }, valueSchema: { objectives: "bytes32[]" } },
    CompletedObjective: { keySchema: { entity: "bytes32", objective: "bytes32" }, valueSchema: "bool" },
    P_UnitReward: { keySchema: { prototype: "bytes32" }, valueSchema: { units: "bytes32[]", amounts: "uint256[]" } },
    P_ResourceReward: {
      keySchema: { prototype: "bytes32" },
      valueSchema: { resources: "uint8[]", amounts: "uint256[]" },
    },
    P_HasBuiltBuildings: { keySchema: { prototype: "bytes32" }, valueSchema: "bytes32[]" },
    HasBuiltBuilding: { keySchema: { entity: "bytes32", buildingType: "bytes32" }, valueSchema: "bool" },
    P_ProducedResources: {
      keySchema: { prototype: "bytes32" },
      valueSchema: { resources: "uint8[]", amounts: "uint256[]" },
    },
    ProducedResource: { keySchema: { entity: "bytes32", resource: "uint8" }, valueSchema: "uint256" },
    P_DestroyedUnits: {
      keySchema: { prototype: "bytes32" },
      valueSchema: { units: "bytes32[]", amounts: "uint256[]" },
    },
    DestroyedUnit: { keySchema: { entity: "bytes32", unit: "bytes32" }, valueSchema: "uint256" },
    P_RaidedResources: {
      keySchema: { prototype: "bytes32" },
      valueSchema: { resources: "uint8[]", amounts: "uint256[]" },
    },
    RaidedResource: { keySchema: { entity: "bytes32", resource: "uint8" }, valueSchema: "uint256" },
    P_DefeatedPirates: { keySchema: { prototype: "bytes32" }, valueSchema: "bytes32[]" },
    DefeatedPirate: { keySchema: { entity: "bytes32", pirate: "bytes32" }, valueSchema: "bool" },
    P_RequiredUnits: { keySchema: { prototype: "bytes32" }, valueSchema: { units: "bytes32[]", amounts: "uint256[]" } },
    P_ProducedUnits: { keySchema: { prototype: "bytes32" }, valueSchema: { units: "bytes32[]", amounts: "uint256[]" } },
    ProducedUnit: { keySchema: { entity: "bytes32", unit: "bytes32" }, valueSchema: "uint256" },
    P_RequiredExpansion: { keySchema: { prototype: "bytes32" }, valueSchema: "uint256" },
    P_GracePeriod: { keySchema: {}, valueSchema: "uint256" },
    GracePeriod: { keySchema: { entity: "bytes32" }, valueSchema: "uint256" },
    P_AllianceConfig: { keySchema: {}, valueSchema: { maxAllianceMembers: "uint256" } },
    PlayerAlliance: { keySchema: { entity: "bytes32" }, valueSchema: { alliance: "bytes32", role: "uint8" } },
    Alliance: {
      keySchema: { entity: "bytes32" },
      valueSchema: { name: "bytes32", score: "uint256", inviteMode: "uint8" },
    },
    SetAllianceMembers: { keySchema: { entity: "bytes32" }, valueSchema: { memberKeys: "bytes32[]" } },
    SetIndexForAllianceMembers: {
      keySchema: { entity: "bytes32", memberKey: "bytes32" },
      valueSchema: { stored: "bool", index: "uint256" },
    },
    AllianceInvitation: {
      keySchema: { entity: "bytes32", alliance: "bytes32" },
      valueSchema: { inviter: "bytes32", timeStamp: "uint256" },
    },
    AllianceJoinRequest: {
      keySchema: { entity: "bytes32", alliance: "bytes32" },
      valueSchema: { timeStamp: "uint256" },
    },
    MarketplaceOrder: {
      keySchema: { id: "bytes32" },
      valueSchema: { seller: "bytes32", orderType: "uint8", resource: "uint8", count: "uint256", price: "uint256" },
    },
    OrderCount: { keySchema: { entity: "bytes32" }, valueSchema: "uint256" },
  },
});
